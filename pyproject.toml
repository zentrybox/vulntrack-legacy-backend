[tool.poetry]
name = "vulntrack-backend"
version = "0.1.0"
description = "A FastAPI application for vulnerability tracking."
authors = ["Jack Del Aguila <inbox@jackby03.com>"]
license = "Proprietary"
readme = "README.md"
homepage = "https://github.com/zentrybox/vulntrack-backend"
repository = "https://github.com/zentrybox/vulntrack-backend"
keywords = ["fastapi", "vulnerability", "tracking"]
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.9.0"
python-dotenv = "^1.1.0"
httpx = "^0.24.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.0"
pytest-cov = "^4.1.0"
requests = "^2.31.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
flake8-pyproject = "^1.2.0"
mypy = "^1.7.0"
bandit = "^1.7.5"
safety = "^2.3.0"
types-requests = "^2.31.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
markers = [
    "asyncio: marks tests as async",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | __pycache__
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "pydantic", "httpx"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_single_line = false
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/migrations/*", "**/__pycache__/*"]

# flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "W504",  # line break after binary operator
    "F401",  # module imported but unused (handled by isort)
    "E402",  # module level import not at top of file
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
    ".mypy_cache",
    "migrations",
    "alembic/versions",
]
per-file-ignores = [
    "__init__.py:F401",
    "*/migrations/*:E501,F401",
    "*/alembic/versions/*:E501,F401",
    "tests/*:S101,S106",
]
max-complexity = 10

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true